{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xF21eE10174c3CCEd113bCd45FB74B210bE906383",
    "txHash": "0x526d2440ebf15283ef64baa778b1e6bdb2ccf7ddfe107df18ae921e578aa411e"
  },
  "proxies": [
    {
      "address": "0xC84A65BeeD790febE15bA079f2eD8E7Aeefa4656",
      "txHash": "0xbe49cfaeaa3eaab223fc4fb083c07c0415a981a1bd05149748f2295280dd367d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8fbba5777ad5b0ceadcc9807f69f02ad4eb53fcdf06aa4cbaeafce480996e2cb": {
      "address": "0xB19E8f3f36948c6E6cAa877aa2FFF7FeA28f315E",
      "txHash": "0x7349408ed27c49e19de6d96d27e9d12529ab37974788f4226f4f054968090bb6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2966_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2343_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "MyPFPland",
            "label": "toyTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/MyPFPland.sol:11"
          },
          {
            "contract": "MyPFPland",
            "label": "paintingTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/MyPFPland.sol:12"
          },
          {
            "contract": "MyPFPland",
            "label": "statuetteTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/MyPFPland.sol:13"
          },
          {
            "contract": "MyPFPland",
            "label": "toyTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/MyPFPland.sol:15"
          },
          {
            "contract": "MyPFPland",
            "label": "paintingTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/MyPFPland.sol:16"
          },
          {
            "contract": "MyPFPland",
            "label": "statuetteTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/MyPFPland.sol:17"
          },
          {
            "contract": "MyPFPland",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/MyPFPland.sol:19"
          },
          {
            "contract": "MyPFPland",
            "label": "isOpenPayment",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPland.sol:20"
          },
          {
            "contract": "MyPFPland",
            "label": "isPausedClaimingToy",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPland.sol:22"
          },
          {
            "contract": "MyPFPland",
            "label": "isPausedClaimingPainting",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPland.sol:23"
          },
          {
            "contract": "MyPFPland",
            "label": "isPausedClaimingStatteute",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPland.sol:24"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToClaimedToy",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPland.sol:26"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToClaimedPainting",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPland.sol:27"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToClaimedStatteute",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPland.sol:28"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToMigratedCameo",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPland.sol:30"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToMigratedHonorary",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPland.sol:31"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToRoyalty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPland.sol:33"
          },
          {
            "contract": "MyPFPland",
            "label": "blootNFT",
            "type": "t_contract(ERC721)4515",
            "src": "../project:/contracts/MyPFPland.sol:34"
          }
        ],
        "types": {
          "t_struct(Counter)1969_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(ERC721)4515": {
            "label": "contract ERC721"
          },
          "t_mapping(t_address,t_struct(UintSet)2966_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2966_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2580_storage"
              }
            ]
          },
          "t_struct(Set)2580_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2343_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2025_storage"
              }
            ]
          },
          "t_struct(Map)2025_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2017_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2017_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2017_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0a8082af3c20ec2d30f7ac6f45ab0dac79ce4c81590f9b99b41adc1fd3826535": {
      "address": "0xfA0C30CB0Da66d69dEFC428538004132D3ed4da6",
      "txHash": "0x65d9943f29e9dc33764535f82aea60658f157a008a1e1fa2a9e01ae01be80e76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2966_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2343_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "MyPFPland",
            "label": "toyTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/Migrations.sol:20"
          },
          {
            "contract": "MyPFPland",
            "label": "paintingTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/Migrations.sol:21"
          },
          {
            "contract": "MyPFPland",
            "label": "statuetteTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/Migrations.sol:22"
          },
          {
            "contract": "MyPFPland",
            "label": "toyTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "paintingTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "statuetteTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "isOpenPayment",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "isPausedClaimingToy",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "isPausedClaimingPainting",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "isPausedClaimingStatteute",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToClaimedToy",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToClaimedPainting",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToClaimedStateutte",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "oldTokenIDUsed",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToMigratedCameo",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToMigratedHonorary",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "addressToRoyalty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPland",
            "label": "blootNFT",
            "type": "t_contract(ERC721)4515",
            "src": "../project:/contracts/Migrations.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)1969_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ERC721)4515": {
            "label": "contract ERC721"
          },
          "t_mapping(t_address,t_struct(UintSet)2966_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2966_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2580_storage"
              }
            ]
          },
          "t_struct(Set)2580_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2343_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2025_storage"
              }
            ]
          },
          "t_struct(Map)2025_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2017_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2017_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2017_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6382042cb502d0e9673714d75bb3f658f35fab52cef0d0ae927257650770bb61": {
      "address": "0x305394B22a082593eAB7DAD01a8E2bfe30C280Ea",
      "txHash": "0xd59c584fa4c5d23fe4377580c6144a6b706a1bb28595d1ec197097687ca259df",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2966_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2343_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "toyTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/Migrations.sol:20"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "paintingTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/Migrations.sol:21"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "statuetteTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/Migrations.sol:22"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "toyTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "paintingTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "statuetteTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "isOpenPayment",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "isPausedClaimingToy",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "isPausedClaimingPainting",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "isPausedClaimingStatteute",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "addressToClaimedToy",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "addressToClaimedPainting",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "addressToClaimedStateutte",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "oldTokenIDUsed",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "addressToMigratedCameo",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "addressToMigratedHonorary",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "addressToRoyalty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "blootNFT",
            "type": "t_contract(ERC721)4515",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "isPausedClaimingLand",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "isPausedClaimingRoyal",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "isPausedClaimingDerivative",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "allowMetadataForAllReserved",
            "type": "t_bool",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "totalCollection",
            "type": "t_uint256",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "claimedLandOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "usedRoyalToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "landRoyalMetadataOf",
            "type": "t_mapping(t_uint256,t_struct(LandMetadata)6243_storage)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "landDerivativeMetadataOf",
            "type": "t_mapping(t_uint256,t_array(t_struct(LandDerivateMetadata)6248_storage)dyn_storage)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "landDerivativeBalance",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "collectionAddressByIndex",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "collectionIndicesByAddress",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "collectionRectByIndex",
            "type": "t_mapping(t_uint256,t_struct(Rectangle)6238_storage)",
            "src": "../project:/contracts/Migrations.sol:25"
          },
          {
            "contract": "MyPFPlandv2",
            "label": "mekakeyWallets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Migrations.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)1969_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ERC721)4515": {
            "label": "contract ERC721"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_struct(LandMetadata)6243_storage)": {
            "label": "mapping(uint256 => struct MyPFPlandv2.LandMetadata)"
          },
          "t_struct(LandMetadata)6243_storage": {
            "label": "struct MyPFPlandv2.LandMetadata",
            "members": [
              {
                "label": "collectionID",
                "type": "t_uint256"
              },
              {
                "label": "tokenID",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(LandDerivateMetadata)6248_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct MyPFPlandv2.LandDerivateMetadata[])"
          },
          "t_array(t_struct(LandDerivateMetadata)6248_storage)dyn_storage": {
            "label": "struct MyPFPlandv2.LandDerivateMetadata[]"
          },
          "t_struct(LandDerivateMetadata)6248_storage": {
            "label": "struct MyPFPlandv2.LandDerivateMetadata",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "tokenID",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Rectangle)6238_storage)": {
            "label": "mapping(uint256 => struct MyPFPlandv2.Rectangle)"
          },
          "t_struct(Rectangle)6238_storage": {
            "label": "struct MyPFPlandv2.Rectangle",
            "members": [
              {
                "label": "leftBottom",
                "type": "t_struct(Point)6233_storage"
              },
              {
                "label": "rightTop",
                "type": "t_struct(Point)6233_storage"
              }
            ]
          },
          "t_struct(Point)6233_storage": {
            "label": "struct MyPFPlandv2.Point",
            "members": [
              {
                "label": "x",
                "type": "t_uint256"
              },
              {
                "label": "y",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)2966_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2966_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2580_storage"
              }
            ]
          },
          "t_struct(Set)2580_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2343_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2025_storage"
              }
            ]
          },
          "t_struct(Map)2025_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2017_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2017_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2017_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1bda5a74e4613026cd14f2d0f42c3289b65e0c2bb3715faa10e1fcdd1a99693f": {
      "address": "0xEF250e3e67b836339D4a1c89192F55165c98F28D",
      "txHash": "0x68eeacbb461564891718625e722eb4511abc2fedaba67e30fbeb963f0dfba3bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2966_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2343_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "toyTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/MyPFPlandv3.sol:12"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "paintingTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/MyPFPlandv3.sol:13"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "statuetteTokenIDs",
            "type": "t_struct(Counter)1969_storage",
            "src": "../project:/contracts/MyPFPlandv3.sol:14"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "toyTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/MyPFPlandv3.sol:16"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "paintingTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/MyPFPlandv3.sol:17"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "statuetteTokenIDBase",
            "type": "t_uint256",
            "src": "../project:/contracts/MyPFPlandv3.sol:18"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/contracts/MyPFPlandv3.sol:20"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "isOpenPayment",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPlandv3.sol:21"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "isPausedClaimingToy",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPlandv3.sol:23"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "isPausedClaimingPainting",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPlandv3.sol:24"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "isPausedClaimingStatteute",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPlandv3.sol:25"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "addressToClaimedToy",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPlandv3.sol:27"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "addressToClaimedPainting",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPlandv3.sol:28"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "addressToClaimedStateutte",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPlandv3.sol:29"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "oldTokenIDUsed",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/MyPFPlandv3.sol:31"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "addressToMigratedCameo",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPlandv3.sol:33"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "addressToMigratedHonorary",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPlandv3.sol:34"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "addressToRoyalty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPlandv3.sol:36"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "blootNFT",
            "type": "t_contract(ERC721)4515",
            "src": "../project:/contracts/MyPFPlandv3.sol:37"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "isPausedClaimingLand",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPlandv3.sol:59"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "isPausedClaimingRoyal",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPlandv3.sol:60"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "isPausedClaimingDerivative",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPlandv3.sol:61"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/MyPFPlandv3.sol:62"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "allowMetadataForAllReserved",
            "type": "t_bool",
            "src": "../project:/contracts/MyPFPlandv3.sol:63"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "totalCollection",
            "type": "t_uint256",
            "src": "../project:/contracts/MyPFPlandv3.sol:66"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "claimedLandOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/MyPFPlandv3.sol:70"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "usedRoyalToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/MyPFPlandv3.sol:71"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "landRoyalMetadataOf",
            "type": "t_mapping(t_uint256,t_struct(LandMetadata)8776_storage)",
            "src": "../project:/contracts/MyPFPlandv3.sol:72"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "landDerivativeMetadataOf",
            "type": "t_mapping(t_uint256,t_array(t_struct(LandDerivateMetadata)8781_storage)dyn_storage)",
            "src": "../project:/contracts/MyPFPlandv3.sol:73"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "landDerivativeBalance",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/MyPFPlandv3.sol:74"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "collectionAddressByIndex",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/MyPFPlandv3.sol:75"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "collectionIndicesByAddress",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/MyPFPlandv3.sol:76"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "collectionRectByIndex",
            "type": "t_mapping(t_uint256,t_struct(Rectangle)8771_storage)",
            "src": "../project:/contracts/MyPFPlandv3.sol:77"
          },
          {
            "contract": "MyPFPlandv3",
            "label": "mekakeyWallets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/MyPFPlandv3.sol:79"
          }
        ],
        "types": {
          "t_struct(Counter)1969_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(ERC721)4515": {
            "label": "contract ERC721"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_struct(LandMetadata)8776_storage)": {
            "label": "mapping(uint256 => struct MyPFPlandv3.LandMetadata)"
          },
          "t_struct(LandMetadata)8776_storage": {
            "label": "struct MyPFPlandv3.LandMetadata",
            "members": [
              {
                "label": "collectionID",
                "type": "t_uint256"
              },
              {
                "label": "tokenID",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(LandDerivateMetadata)8781_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct MyPFPlandv3.LandDerivateMetadata[])"
          },
          "t_array(t_struct(LandDerivateMetadata)8781_storage)dyn_storage": {
            "label": "struct MyPFPlandv3.LandDerivateMetadata[]"
          },
          "t_struct(LandDerivateMetadata)8781_storage": {
            "label": "struct MyPFPlandv3.LandDerivateMetadata",
            "members": [
              {
                "label": "collectionAddress",
                "type": "t_address"
              },
              {
                "label": "tokenID",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Rectangle)8771_storage)": {
            "label": "mapping(uint256 => struct MyPFPlandv3.Rectangle)"
          },
          "t_struct(Rectangle)8771_storage": {
            "label": "struct MyPFPlandv3.Rectangle",
            "members": [
              {
                "label": "leftBottom",
                "type": "t_struct(Point)8766_storage"
              },
              {
                "label": "rightTop",
                "type": "t_struct(Point)8766_storage"
              }
            ]
          },
          "t_struct(Point)8766_storage": {
            "label": "struct MyPFPlandv3.Point",
            "members": [
              {
                "label": "x",
                "type": "t_uint256"
              },
              {
                "label": "y",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)2966_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2966_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2580_storage"
              }
            ]
          },
          "t_struct(Set)2580_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2343_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2025_storage"
              }
            ]
          },
          "t_struct(Map)2025_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2017_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2017_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2017_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
